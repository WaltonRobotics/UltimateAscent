// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
package org.usfirst.frc2974.Walton2013.subsystems;

import edu.wpi.first.wpilibj.CANJaguar;
import edu.wpi.first.wpilibj.Relay;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.can.CANTimeoutException;
import edu.wpi.first.wpilibj.command.Subsystem;
import org.usfirst.frc2974.Walton2013.RobotMap;
import org.usfirst.frc2974.Walton2013.commands.UseConveyor;

/**
 *
 */
public class ConveyorSystem extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    Talon frisbeeRoller = RobotMap.frisbeeRollerFrisbeeRoller;
    Talon conveyorBelt = RobotMap.conveyorMotor;
    Relay spatula = RobotMap.spatulaMotor;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void initDefaultCommand() {
        setDefaultCommand(new UseConveyor()); //driver controlled, not moving
    }

    /**
     * Method activates the jaguar that is associated with the retrieval system.
     *
     * @param speed The speed that the jaguar will spin (from -1 to 1, 1 being
     * in and -1 being expelling the frisbee)
     */
    public void rollFrisbee(double speed) {
        frisbeeRoller.set(speed);
        conveyorBelt.set(speed);
    }

    public void stopConveyor() {
        conveyorBelt.set(0);
    }

    public void goGoGadgetSpatula(double speed) {
        if (speed == 0) {
            spatula.set(Relay.Value.kOff);
        } else if (speed == 1) {
            spatula.set(Relay.Value.kForward);
        } else if (speed == -1) {
            spatula.set(Relay.Value.kReverse);
        }
    }
}
//    public void stopTheFlippingSpatula() {
//        spatula.set(Relay.Value.kOff);
//    }
//
//    public void reverseSpatular() {
//        spatula.set(Relay.Value.kReverse);
//    }